version: "3"

services:
  db:
    image: postgres:14
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
    ports:
      - "5434:5432"
    volumes:
      - "data:/var/lib/postgresql/data"
    networks:
      - backend
    restart: always


  web:
    restart: always
    env_file:
      - ./.env
    entrypoint: ./entrypoint.sh
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/home/application
    networks:
      - backend
    depends_on:
      - db

  web_celery:
    # entrypoint: ./entrypoint.sh
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    restart: always
    depends_on:
      - db
      - redis
      - web
    command: celery -A dashboard.celery  beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    # volumes:
    #   - .:/home/application
    networks:
      - backend

  web_celery_worker:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - web
    command: celery -A dashboard.celery worker -l debug
    # volumes:
    #   - .:/home/application
    networks:
      - backend

  swagger-ui:
   restart: always
   image: swaggerapi/swagger-ui
   container_name: swagger_ui
   ports:
      - "81:8080"
   volumes:
      - ./doc:/usr/share/nginx/html/doc
   environment:
      API_URL: doc/openapi.yml

  redis:
    image: redis:latest
    networks:
      - backend


volumes:
  data:
    external: true


networks:
  backend:
